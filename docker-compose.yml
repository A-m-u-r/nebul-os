version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: nebul-os-postgres
    environment:
      POSTGRES_USER: nebulos
      POSTGRES_PASSWORD: nebulos123
      POSTGRES_DB: nebulos
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nebul-network

  redis:
    image: redis:7-alpine
    container_name: nebul-os-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - nebul-network

  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
    container_name: nebul-os-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://nebulos:nebulos123@postgres:5432/nebulos
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - nebul-network

  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
    container_name: nebul-os-auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://nebulos:nebulos123@postgres:5432/nebulos
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - nebul-network

  files:
    build:
      context: .
      dockerfile: apps/files/Dockerfile
    container_name: nebul-os-files
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://nebulos:nebulos123@postgres:5432/nebulos
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - nebul-network

  processes:
    build:
      context: .
      dockerfile: apps/processes/Dockerfile
    container_name: nebul-os-processes
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://nebulos:nebulos123@postgres:5432/nebulos
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - nebul-network

  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: nebul-os-frontend
    ports:
      - "4200:80"
    depends_on:
      - gateway
    networks:
      - nebul-network

volumes:
  postgres_data:
  redis_data:

networks:
  nebul-network:
    driver: bridge
